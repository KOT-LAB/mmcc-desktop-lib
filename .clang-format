Language: Cpp
Standard: c++14

UseTab: Never
IndentWidth: 2
AccessModifierOffset: -2
IndentAccessModifiers: false
IndentCaseLabels: true
IndentCaseBlocks: false
IndentExternBlock: Indent
IndentPPDirectives: AfterHash
IndentRequiresClause: false
IndentWrappedFunctionNames: true
NamespaceIndentation: None
PPIndentWidth: -1

InsertTrailingCommas: None
InsertNewlineAtEOF: true
KeepEmptyLinesAtEOF: true
KeepEmptyLinesAtTheStartOfBlocks: false
LineEnding: LF

PointerAlignment: Middle
ReferenceAlignment: Middle
QualifierAlignment: Leave

SpaceAroundPointerQualifiers: Both
SpaceBeforeAssignmentOperators: true
SpaceBeforeCaseColon: false
SpaceBeforeCpp11BracedList: false

SeparateDefinitionBlocks: Always

AlignAfterOpenBracket: BlockIndent
AlignArrayOfStructures: Left

AlignConsecutiveAssignments:
  Enabled: false
  AcrossEmptyLines: true
  AcrossComments: false
  PadOperators: false
  AlignCompound: false

AlignConsecutiveDeclarations:
  Enabled: false
  AcrossEmptyLines: false
  AcrossComments: false

AlignConsecutiveMacros:
  Enabled: true
  AcrossEmptyLines: true
  AcrossComments: false

AlignConsecutiveBitFields: 
  Enabled: false
  AcrossEmptyLines: false
  AcrossComments: false

AlignConsecutiveShortCaseStatements:
  Enabled: true
  AcrossEmptyLines: false
  AcrossComments: false
  AlignCaseColons: true

AlignEscapedNewlines: Left
AlignOperands: DontAlign

AlignTrailingComments:
  Kind: Always
  OverEmptyLines: 2

AllowAllArgumentsOnNextLine: true
AllowAllParametersOfDeclarationOnNextLine: true

AllowShortBlocksOnASingleLine: Empty
AllowShortCaseLabelsOnASingleLine: false
AllowShortEnumsOnASingleLine: false
AllowShortFunctionsOnASingleLine: Empty
AllowShortIfStatementsOnASingleLine: Never
AllowShortLambdasOnASingleLine: Empty
AllowShortLoopsOnASingleLine: false

AlwaysBreakAfterReturnType: None
AlwaysBreakBeforeMultilineStrings: false
AlwaysBreakTemplateDeclarations: Yes

BinPackArguments: false
BinPackParameters: false

BitFieldColonSpacing: Both

RequiresClausePosition: OwnLine

BreakAfterAttributes: Never
BreakBeforeBinaryOperators: None
BreakBeforeConceptDeclarations: Always
BreakBeforeTernaryOperators: true
BreakConstructorInitializers: BeforeComma
BreakInheritanceList: BeforeComma
BreakStringLiterals: true

BreakBeforeBraces: Custom
BraceWrapping:
    AfterCaseLabel: false
    AfterControlStatement: Never

    AfterClass: false
    AfterStruct: false
    AfterEnum: false
    AfterUnion: false
    AfterFunction: true
    AfterNamespace: false
    AfterExternBlock: false

    BeforeCatch: false
    BeforeElse: false
    BeforeWhile: false
    BeforeLambdaBody: false

    IndentBraces: false

    SplitEmptyFunction: false
    SplitEmptyRecord: false
    SplitEmptyNamespace: false

BracedInitializerIndentWidth: 2
InsertBraces: true
RemoveBracesLLVM: false

ConstructorInitializerIndentWidth: 2
ContinuationIndentWidth: 2

ColumnLimit: 0
ReflowComments: true
CompactNamespaces: false
Cpp11BracedListStyle: true
DerivePointerAlignment: false
EmptyLineAfterAccessModifier: Never
EmptyLineBeforeAccessModifier: Always
FixNamespaceComments: true

MaxEmptyLinesToKeep: 4
PackConstructorInitializers: NextLineOnly
LambdaBodyIndentation: Signature

RemoveSemicolon: true

SortUsingDeclarations: LexicographicNumeric

SpaceAfterCStyleCast: false
SpaceAfterLogicalNot: false
SpaceAfterTemplateKeyword: true
SpaceBeforeCtorInitializerColon: true
SpaceBeforeInheritanceColon: true
SpaceBeforeJsonColon: false
SpaceBeforeRangeBasedForLoopColon: true
SpaceBeforeSquareBrackets: false
SpaceInEmptyBlock: true
SpacesInAngles: Never
SpacesInContainerLiterals: false
SpacesInSquareBrackets: false
SpacesBeforeTrailingComments: 1
SpacesInLineCommentPrefix: 
  Minimum: 1
  Maximum: 1

SpaceBeforeParens: Custom
SpaceBeforeParensOptions:
  AfterControlStatements: true
  AfterFunctionDeclarationName: false
  AfterFunctionDefinitionName: false
  AfterForeachMacros: false
  AfterIfMacros: true
  AfterOverloadedOperator: false
  AfterRequiresInClause: true
  AfterRequiresInExpression: true
  BeforeNonEmptyParentheses: false

SpacesInParens: Custom
SpacesInParensOptions:
  InConditionalStatements: false
  InCStyleCasts: false
  InEmptyParentheses: false
  Other: false

IntegerLiteralSeparator:
  Binary: 0
  Decimal: -1
  Hex: 0

SortIncludes: Never
IncludeBlocks: Regroup
IncludeCategories:
  - Regex:           '^"(llvm|llvm-c|clang|clang-c)/'
    Priority:        2
    SortPriority:    2
    CaseSensitive:   true
  - Regex:           '^((<|")(gtest|gmock|isl|json)/)'
    Priority:        3
  - Regex:           '<[[:alnum:].]+>'
    Priority:        4
  - Regex:           '.*'
    Priority:        1
    SortPriority:    0




